version: '3.3'
#docker network create -d bridge backend
services:
  config-server:
    image: localhost:5000/spring-cloud-config-server:1.0-SNAPSHOT
    container_name: config-server
    ports:
      - "8888:8888"
    networks:
      backend:
        aliases:
          - "config-server"

  naming-server:
    image: localhost:5000/spring-cloud-naming-server:1.0-SNAPSHOT
    container_name: naming-server
    environment:
      - "SPRING_PROFILES_ACTIVE=cloud"
    ports:
      - "8761:8761"
    depends_on:
      config-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "naming-serve"

  gateway-server:
    image: localhost:5000/spring-cloud-gateway-server:1.0-SNAPSHOT
    container_name: gateway-server
    environment:
      - "SPRING_PROFILES_ACTIVE=cloud"
    ports:
      - "8765:8765"
    depends_on:
      config-server:
        condition: service_started
      naming-server:
        condition: service_started
    networks:
      backend:
        aliases:
          - "gateway-server"

  world-database:
    image: postgres:16-alpine
    container_name: world-database
    ports:
      - "5441:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "world"
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./initCountryAndCity.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./dataCountryAndCity.sql:/docker-entrypoint-initdb.d/2-data.sql
      - /D/PostgreSQL/16/world/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend:
        aliases:
          - "country-database-master"

  countrylanguage-database:
    image: postgres:16-alpine
    container_name: countrylanguage-database
    ports:
      - "5442:5432"
    environment:
      POSTGRES_USER: "postgres"
      POSTGRES_PASSWORD: "postgres"
      POSTGRES_DB: "languages"
      PGDATA: /var/lib/postgresql/data
    volumes:
      - ./initCountryLanguage.sql:/docker-entrypoint-initdb.d/1-init.sql
      - ./dataCountryLanguage.sql:/docker-entrypoint-initdb.d/2-data.sql
      - /D/PostgreSQL/16/countrylanguage/data:/var/lib/postgresql/data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U postgres" ]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      backend:
        aliases:
          - "country-language-database-master"

  country-languages-service-1:
    image: localhost:5000/language-service:1.0-SNAPSHOT
    container_name: country-languages-service-1
    environment:
      SERVER_PORT: 8001
      SPRING_PROFILES_ACTIVE: "cloud"
    ports:
      - "8001:8001"
    networks:
      - backend

  country-languages-service-2:
    image: localhost:5000/language-service:1.0-SNAPSHOT
    container_name: country-languages-service-2
    environment:
      SERVER_PORT: 8002
      SPRING_PROFILES_ACTIVE: "cloud"
    ports:
      - "8002:8002"
    networks:
      - backend

  country-service-1:
    image: localhost:5000/country-service:1.0-SNAPSHOT
    container_name: country-service-1
    environment:
      SERVER_PORT: 8011
      SPRING_PROFILES_ACTIVE: "cloud"
    ports:
      - "8011:8011"
    networks:
      - backend

  country-service-2:
    image: localhost:5000/country-service:1.0-SNAPSHOT
    container_name: country-service-2
    environment:
      SERVER_PORT: 8012
      SPRING_PROFILES_ACTIVE: "cloud"
    ports:
      - "8012:8012"
    networks:
      - backend

networks:
  backend:
    driver: bridge